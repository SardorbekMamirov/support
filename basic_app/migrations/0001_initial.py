# Generated by Django 3.2.9 on 2022-05-24 10:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryname', models.CharField(max_length=200)),
                ('category_uz', models.CharField(max_length=200)),
                ('category_ru', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Konsultatsiya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='Ваше имя')),
                ('phone', models.CharField(max_length=40, verbose_name='Ваше номер')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('old_price', models.CharField(max_length=200)),
                ('dis_price', models.CharField(max_length=200)),
                ('quantity', models.CharField(max_length=100)),
                ('ramka_uz', models.CharField(max_length=200)),
                ('ramka_ru', models.CharField(max_length=200)),
                ('razmer_m', models.CharField(max_length=200)),
                ('razmer_sm', models.CharField(max_length=200)),
                ('recommendation_uz', models.CharField(max_length=200)),
                ('recommendation_ru', models.CharField(max_length=200)),
                ('complekt_uz', models.CharField(max_length=200)),
                ('complekt_ru', models.CharField(max_length=200)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic_app.categories')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tel', models.CharField(max_length=30, verbose_name='Телефонный номер')),
                ('address_ru', models.CharField(max_length=150, verbose_name='Адрес')),
                ('address_uz', models.CharField(max_length=150, verbose_name='Адрес')),
                ('time_ru', models.CharField(max_length=100, verbose_name='Рабочее времяxx')),
                ('time_uz', models.CharField(max_length=100, verbose_name='Рабочее времяxx')),
                ('telegram', models.CharField(max_length=100, verbose_name='Телеграм')),
                ('instagram', models.CharField(max_length=100, verbose_name='Инстаграм')),
            ],
        ),
        migrations.CreateModel(
            name='TokenModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=15)),
                ('img', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='Zakaz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/')),
                ('name', models.CharField(max_length=60, verbose_name='Ваше имя')),
                ('phone', models.CharField(max_length=40, verbose_name='Ваше номер')),
                ('pool_frame', models.CharField(max_length=100)),
                ('money', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField()),
                ('count', models.BigIntegerField()),
                ('product_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic_app.products')),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=30, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
